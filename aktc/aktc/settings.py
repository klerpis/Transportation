"""
Django settings for aktc project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os

import dj_database_url

if not os.getenv("RENDER"):
    from dotenv import load_dotenv
    load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%(x+i=f3z_zi1($wzhhu8x9bt5%jq&t1ahl+n^r^bvy*^i+jw%'
# SECRET_KEY = 'django-insecure-%(x+i=f3z_zi1($diuywzhhu8x9bt5%jqokdpij&t1ahl+n^r^bvy*^i+jw%'
SECRET_KEY = os.environ.get('SECRET_KEY', default=SECRET_KEY)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = 'RENDER' not in os.environ
# DEBUG = True

# ['bookingaktc.onrender.com', "localhost:8000", ]
# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ["bookingaktc.onrender.com", "localhost", '127.0.0.1']




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    # "django.contrib.admin.apps.SimpleAdminConfig",
    # "aktc.apps.AktcAdminConfig",
    # 'aktcUI.apps.AktcAdminConfig'
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'cusers',
    'aktcUI',
    'accounts',
    'feedbacksystem',
    'setupsystem',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'aktc.urls'


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

CORS_ALLOWED_ORIGINS = [
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    # 'http://127.0.0.1:3000',
    # 'http://localhost:3000',
    'https://bookingaktc.onrender.com',
    # 'http://127.0.0.1:8000'
]
# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_ALL_ORIGINS = True


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=2),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=3),
    "ROTATE_REFRESH_TOKENS": False,
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aktc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases




if os.getenv('RENDER'):
    default = os.getenv("DATABASE_URL")
    DATABASES = {
        'default': dj_database_url.config(
            # Replace this value with your local database's connection string.
            default=default,
            conn_max_age=600,
            ssl_require=True
            )
    }


else:
    default = os.getenv("EXTERNAL_DATABASE_URL")
    DATABASES = {
        'default': dj_database_url.config(
            # Replace this value with your local database's connection string.
            default=default,
            conn_max_age=600,
            ssl_require=True
            )
    }
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': BASE_DIR / 'db.sqlite3',
    #     }
    # }



# DATABASES = {
#     'default': dj_database_url.config(
#         default='sqlite:///' + str(BASE_DIR / 'db.sqlite3'),
#         conn_max_age=600,
#         ssl_require=True  # Optional but good for hosted DB
#     )
# }




# DATABASES = {
#     'default': dj_database_url.config(
#         default=os.getenv('DATABASE_URL', 'sqlite:///db.sqlite3'),
#         conn_max_age=600,
#     )
# }

# WARNING:root:No DATABASE_URL environment variable set, and so no databases setup
# django.core.exceptions.ImproperlyConfigured: settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static/",
    # os.path.join(BASE_DIR, 'static')
    # BASE_DIR / "aktcUI" / "static",
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


if not DEBUG:
    # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
    # and renames the files with unique names for each version to support long-term caching
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
